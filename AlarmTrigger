#include <WiFi.h>
#include <PubSubClient.h>

#define SW_PIN 17
#define DEBOUNCE_DELAY 50

const char* ssid = "-------";
const char* password = "-------";
const char* mqtt_server = "-------";

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    String clientId = "------";

    if (client.connect(clientId.c_str(), "-------", "-------")) {
      Serial.println("connected");
      client.subscribe("-------");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void setup() {
  pinMode(SW_PIN, INPUT);

  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  static bool prevSwitchState = false;
  bool currentSwitchState = digitalRead(SW_PIN);

  if (currentSwitchState != prevSwitchState) {
    delay(DEBOUNCE_DELAY);
    currentSwitchState = digitalRead(SW_PIN);
  }

  if (currentSwitchState != prevSwitchState) {
    prevSwitchState = currentSwitchState;

    if (currentSwitchState == HIGH) {
      client.publish("------", "1");
    }
  }
}
